<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=8" />
		<meta name="google" value="notranslate" />
		<title>Bookmarks</title>
		<style type="text/css">
			* { font-family:sans-serif; margin:0; padding:0; cell-spacing:0; font-size:11px; }
			body { padding-top:15px; }
			h1,
				h2 .group-title { font-family:'Segoe UI', 'Segoe', 'Trebuchet MS', sans-serif; }
			h1 { display:none; }
			a { cursor:pointer; color:#a00; text-decoration:none; }
			p { margin-bottom:4px; }
			ul { list-style-type:none; }
			.groups li { margin-bottom:7px; }
			.groups.filtered .link { opacity:0.15; filter:alpha(opacity=15); }
			.link { padding:1px; opacity:1; filter:alpha(opacity=100); }
			.link.hit { opacity:1 !important; filter:alpha(opacity=100) !important; }
			.link.selected { padding:0px; border:dotted black 1px; opacity:1 !important; filter:alpha(opacity=100) !important; }
			.group { margin-left:20px; margin-right:20px; }
			.group.opened .links { max-height:999px; transition:max-height 0.3s; }
			.group h2 { cursor:pointer; padding-bottom:3px; border-bottom:solid silver 1px;  }
			.group a { color:black; }
			.group h2 .group-title { font-weight:normal; font-size:18px;  }
			a.add { font-weight:bold; font-size:25px; padding-top:2px; margin-right:20px; text-decoration:none; color:silver; }
			a.add.link { position:absolute; right:0px;  }
			a.add.group {  }
			a.add:hover { color:black; }
			.group.opened .links { display:block; }
			.group .links { max-height:0px; overflow:hidden; transition:max-height 0.3s; }
			.group h2:before { font-size:19px; font-weight:normal; }
			.group.opened h2:before { content:"▾ "; }
			.group h2:before { content:"▸ "; }
			.links { margin-top:8px; }
			.links li { float:left; display:inline-block; width:200px; }
			.links a { padding:4px; color:black; text-align:left; display:inline-block; height:45px; text-decoration:none; white-space:nowrap; }
			.links a:hover { background:#eee; }
			.links a:hover .description .url { text-decoration:underline; }
			.links a:hover .icon { background-color:white !important; }
			.links a .icon { display:inline-block; width:45px; height:45px; background:#0072c6; }
			.links a .description { vertical-align:top; display:inline-block; margin-left:3px; top:0px; width:140px; overflow:hidden; text-overflow:ellipsis; }
			.links a .description .url { margin-top:2px; display:inline-block; width:140px; color:#888; overflow:hidden; text-overflow:ellipsis; }
			#overlay-background { display:none; position:fixed; z-index:998; top:0px; left:0px; height:100%; width:100%; background:black; opacity:0.4; filter:alpha(opacity=40); }
			#dialog-container { display:block; position:absolute; top:50%; left:50%; z-index:999; }
			.dialog { display:none; width:300px; height:150px; margin-left:-150px; margin-top:-75px; background:white; }
			.dialog .cancel { color:black; font-size:17px; display:block; position:absolute; right:2px; top:-77px; width:10px; height:8px; }
			.dialog .cancel:before { content:"×"; }
			.dialog .content { padding:15px; }
			#search-container { margin-left:20px; margin-bottom:20px; color:gray; }
			#search-container input { margin-left:10px; width:130px; }
		</style>
		<script type="text/javascript">
			// bookmark-array
			var bookmarks = [
				{
					title: 'Allgemein',
					opened: true,
					links: [
						{ label:'Wikipedia', url:'http://de.wikipedia.org', keywords:'lexikon' },
						{ label:'Metaebene', url:'http://metaebene.me', keywords:'podcast,freakshow,cre,chaos' }
					]
				},
				{
					title: 'Film',
					opened: false,
					links: [
						{ label:'Rotten Tomatoes', url:'http://www.rottentomatoes.com' },
						{ label:'slashCAM', url:'http://www.slashcam.de' }
					]
				},
				{
					title: 'Development',
					opened: false,
					links: [
						{ label:'github', url:'https://github.com', keywords:'svn,versioncontrol' },
						{ label:'Stack Overflow', url:'http://www.stackoverflow.com' },
						{ label:'jQuery', url:'http://www.jquery.com', keywords:'javascript' }
					]
				}
			];
		</script>
		<script id="bookmark-template" type="text/x-jsrender">
			<li id="group-{{>title}}" class="group {{if opened}}opened{{/if}} {{if opened}}user-opened{{/if}}">
				<h2>
					<a class="group-title">{{>title}}</a>
					<a class="add link" title="add link" href="#">+</a>
				</h2>
				<ul class="links">
					{{for links}}
						<li class="link">
							<a href="{{>url}}">
								<div class="icon" data-hash-base="{{>label}}{{>url}}"></div>
								<span class="description" title="{{>label}}">
									<span class="label" data-keywords="{{>keywords}}">{{>label}}</span>
									<br />
									<span class="url">{{>url}}</span>
								</span>
							</a>
						</li>
					{{/for}}
				</ul>
			</li>
		</script>
		
		<script type="text/javascript" src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
		<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.2/modernizr.min.js"></script>
		<script type="text/javascript" src="http://cdn.jsdelivr.net/jsrender/1.0pre35/jsrender.min.js"></script>
		
		<script type="text/javascript">
			// config
			var SORT_ALPHABETICALLY = false;
		
			// constants
			var KEY_ENTER = 13;
			var KEY_LEFT = 37;
			var KEY_RIGHT = 39;
			var KEY_UP = 38;
			var KEY_DOWN = 40;
			
			function hashCode(str) {
				var hash = 0;
				
				for (var i = 0; i < str.length; i++) {
					hash = str.charCodeAt(i) + ((hash << 5) - hash);
				}
				
				return hash;
			} 

			function intToRGB(i){
				return ((i >> 24) & 0xFF).toString(16) + 
					((i >> 16) & 0xFF).toString(16) + 
					((i >> 8) & 0xFF).toString(16);
			}
			
			function sortLinks() {
				if (!SORT_ALPHABETICALLY) return;
			
				$.each(bookmarks, function(key, value) {
					value.links.sort(function(a, b) {
						return a.label.localeCompare(b.label);
					});
					
				});
			}
			
			function refreshGroupOpenState() {
				$.each(bookmarks, function(key, value) {
					if (!Modernizr.localstorage) return;
					
					var openState = value.opened;
					var k = 'group-' + value.title;
					if (localStorage[k] != undefined) openState = localStorage[k];
					value.opened = openState == 'true' ? true : false;
				});
			}
			
			function openDialog(id) {
				$('#overlay-background, .dialog#' + id).fadeIn();
			}
			
			function closeDialogs() {
				$('#overlay-background, .dialog').fadeOut();
			}
			
			function leavePage() {
				$('*').hide();
			}

			$(function() {			
				// focus first input
				$(':input:enabled:visible:first').focus().val('');
			
				// prepare and render links
				sortLinks();
				refreshGroupOpenState();
				$('.groups').html(
					$('#bookmark-template').render(bookmarks)
				);
				
				// calculate lowercase labels
				$('.label').each(function() {
					$(this).attr('data-lower', $(this).text().toLowerCase());
				});
				
				// create hash-colors
				$('li.link a .icon').each(function() {
					$(this).css('background-color', '#' + intToRGB(hashCode($(this).attr('data-hash-base'))));
				});
				
				// fade out everything when link is clicked
				$('.link a').click(function() {
					leavePage();
				});
				
				// add toggle for groups
				$('.group h2 .group-title').click(function() {
					var group = $(this).closest('.group');
					
					$(group).toggleClass('opened user-opened');
					
					if (Modernizr.localstorage) {
						localStorage[$(group).attr('id')] = $(group).hasClass('user-opened');
					}
				});
				
				// open dialogs
				$('.add.group').click(function() {
					openDialog('new-group');
				});				
				
				$('.add.link').click(function() {
					openDialog('new-link');
				});

				// close dialogs
				$('.close-dialog').click(function() {
					closeDialogs();
				});
				
				// save (@todo)
				$('#save').click(function() {
					alert(JSON.stringify(bookmarks));
				});
				
				// search
				$('#search').keyup(function(event) {
					var term = $('#search').val().toLowerCase();

					var currentlySelected = $('.link.selected:first');
					
					if (event.which == KEY_RIGHT) {
						if ($(currentlySelected).next().length > 0) {
							$(currentlySelected).next().addClass('selected');
							$(currentlySelected).removeClass('selected');
						}
						event.preventDefault();
						return false;
					} else if (event.which == KEY_LEFT) {
						if ($(currentlySelected).prev().length > 0) {
							$(currentlySelected).prev().addClass('selected');
							$(currentlySelected).removeClass('selected');
						}
						event.preventDefault();
						return false;
					} else if (event.which == KEY_UP) {
						var selectedOffset = $(currentlySelected).offset();
						var found = null;
						
						$(currentlySelected).prevAll().each(function() {
							if ($(this).offset().left == selectedOffset.left) {
								found = $(this);
								return false;
							}
						});
						
						if ($(found).length > 0) {
							$(found).addClass('selected');
							$(currentlySelected).removeClass('selected');
						}
					
						event.preventDefault();
						return false;
					} else if (event.which == KEY_DOWN) {
						var selectedOffset = $(currentlySelected).offset();
						var found = null;
						
						$(currentlySelected).nextAll().each(function() {
							if ($(this).offset().left == selectedOffset.left) {
								found = $(this);
								return false;
							}
						});
						
						if ($(found).length > 0) {
							$(found).addClass('selected');
							$(currentlySelected).removeClass('selected');
						}
					
						event.preventDefault();
						return false;
					} else if (event.which == KEY_ENTER) {
						var href = $('.link.selected:first a').attr('href');
						
						if (href == null) return;
						
						leavePage();
						location.href = href;
						return;
					} 	
					
					$('.group').removeClass('opened');
					$('.groups').addClass('filtered');
					$('.link')
						.removeClass('hit')
						.removeClass('selected');
					
					if (term.length == 0) {
						$('.groups').removeClass('filtered');
						$('.group.user-opened').addClass('opened');
						return;
					}
					
					$(".label[data-lower *= '" + term + "'], .label[data-keywords *= '" + term + "']").each(function() {
						$(this).closest('.link').addClass('hit');
						$(this).closest('.group').addClass('opened');
					});
								
					$('.link.hit:first').addClass('selected');
				});
			});
		</script>
	</head>
	<body>
		<h1>Bookmarks</h1>
		<div id="search-container">
			<p>
				Search <input type="text" id="search" value="" />
			</p>
		</div>
		
		<!-- list of groups and bookmarks -->
		<ul class="groups">
			<!-- bookmarks will be rendered here -->
		</ul>
		<a class="add group" title="add group">+</a>
		<a class="" id="save" href="#">save</a>
		
		<!-- dialog-section -->
		<div id="overlay-background"></div>
		<div id="dialog-container">
			<div class="dialog" id="new-link">
				<a class="cancel close-dialog"></a>
				<div class="content">
					<p>This dialog is supposed to add a new link. It is to be developed.</p>
					<p>You may now <a class="close-dialog">close this dialog</a>.</p>
				</div>
			</div>
			<div class="dialog" id="new-group">
				<a class="cancel close-dialog"></a>
				<div class="content">
					<p>This dialog is supposed to add a new group. It is to be developed.</p>
					<p>You may now <a class="close-dialog">close this dialog</a>.</p>
				</div>
			</div>
		</div>
	</body>
</html>